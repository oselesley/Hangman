!function(e){var t={};function s(u){if(t[u])return t[u].exports;var i=t[u]={i:u,l:!1,exports:{}};return e[u].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,u){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:u})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);class u{constructor(e,t){this.word=e.split(""),this.guesses=[],this.remainingGuesses=t,this.status="play"}get puzzle(){let e="";return this.word.forEach(t=>{e+=this.guesses.includes(t.toLowerCase())||" "===t?t:"*"}),e}get statusMsg(){let e,t=1===this.remainingGuesses?"guess":"guesses";return"play"===this.status?e=`You have ${this.remainingGuesses} ${t} left`:"finished"===this.status?e="Great work! You guessed the word":"failed"===this.status&&(e=`Nice try!! The word is "${this.word.join("")}"`),e}userGuess(e){let t;if("play"===this.status){e=e.toLowerCase();let s=!this.guesses.includes(e),u=!this.word.join("").toLowerCase().includes(e);s&&this.guesses.push(e.toLowerCase()),s&&u&&this.remainingGuesses--,t=[this.puzzle,this.statusMsg]}else"finished"===this.status?t=[this.puzzle,this.statusMsg]:"failed"===this.status&&(t=[this.puzzle,this.statusMsg]);return this.calculateStatus(),t}calculateStatus(){let e=this.word.every(e=>" "===e||this.guesses.includes(e.toLowerCase()));this.remainingGuesses<1?this.status="failed":this.status=e?"finished":"play"}}const i=e=>{document.querySelector("div").innerHTML="",e[0].split("").forEach(e=>{document.querySelector(".puzzle").appendChild(n(e))}),document.querySelector("small").textContent=e[1]},n=function(e){let t=document.createElement("span");return t.textContent=e,t.setAttribute("class","letter"),t};const r=async(e,t)=>{t=/http(s?):\/\/\w*/.test(t)?t:`https://${t}?wordCount=${e}`,console.log(t);const s=await fetch(t);return await s.json()};let o;async function a(){let e=await r(2,"puzzle.mead.io/puzzle");console.log(e),o=new u(e.puzzle,3),i(o.userGuess(""))}a(),window.addEventListener("keypress",e=>{i(o.userGuess(e.key)),"finished"!==o.status&&"failed"!==o.status||i(o.userGuess(""))}),document.querySelector("#reset").addEventListener("click",e=>{a()})}]);
//# sourceMappingURL=bundle.js.map